buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
        classpath "org.grails.plugins:hibernate5:6.0.4"
        classpath "org.grails.plugins:views-gradle:1.1.6"
    }
}


version "0.3.4"
group "oap"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "org.grails.plugins.views-json"
apply plugin:"asset-pipeline"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
	// for handling uploaded excel file and new XML processing
	compile fileTree(dir:'lib', include:['excel2oap.jar',
										 'oads_xml.jar',
										 'tws_util.jar',
										 'socatmetadata-7.0.2.jar',
										 'gwt-user.jar',
										 'servlet-api.jar',
										 'gwtbootstrap3-0.9.4.jar',
										 'gwtbootstrap3-extras-0.9.4.jar',
										 'restygwt-2.2.0.jar',
										 'jsr311-api-1.1.1.jar',
'gwt-api-checker.jar',
'gwt-codeserver.jar',
'gwt-dev.jar',
'gwt-elemental.jar',
'gwt-jackson-0.14.1.jar',
'gwt-openlayers-client-0.6.jar',
'gwt-servlet-deps.jar',
'gwt-servlet.jar',
'gwtbootstrap3-0.9.4.jar',
'gwtbootstrap3-extras-0.9.4.jar',
'gwttime.jar',
'jackson-annotations-2.7.2-sources.jar',
'jackson-annotations-2.7.2.jar',
'javapoet-1.0.0.jar',
'jsr311-api-1.1.1.jar',
'omemetadata-7.0.0.jar',
'org.moxieapps.gwt.highcharts-1.7.0.jar',
'requestfactory-apt-src.jar',
'requestfactory-apt.jar',
'requestfactory-client+src.jar',
'requestfactory-client-src.jar',
'requestfactory-client.jar',
'requestfactory-server+src.jar',
'requestfactory-server-src.jar',
'requestfactory-server.jar',
'restygwt-2.2.0.jar',
'xalan-2.7.2.jar',
'xercesImpl-2.9.1.jar'
])
										 ])
    // Add JSON Views
    compile 'org.grails.plugins:views-json:1.2.0'
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
	runtime "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // https://mvnrepository.com/artifact/joda-time/joda-time
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    // https://mvnrepository.com/artifact/org.jdom/jdom2
    compile group: 'org.jdom', name: 'jdom2', version: '2.0.6'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.5'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'

    //Requisite packages for ServiceTest.java:
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.5'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'


    // RHS - use mysql for production
    // JDBC
    runtime 'mysql:mysql-connector-java:8.0.32'

}

task GWTCompile (type: Exec) {
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', 'GWT-compile.bat'
    } else {
        commandLine 'sh', './GWT-compile'
    }
}

war.dependsOn(GWTCompile)

jar.dependsOn(GWTCompile)

springBoot {
    mainClass="oap.Application"
}

//sourceSets {
//    main {
//        java{
//            srcDirs 'gwt' /* include proto files from base project level */
//        }
//    }
//}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}

assets {
    minifyJs = true
    minifyCss = true
}
